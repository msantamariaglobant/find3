var tileLayer = new L.TileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png',{
  attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, &copy; <a href="http://cartodb.com/attributions">CartoDB</a>',
  maxZoom: 22,
   maxNativeZoom: 20
});

var map = new L.Map('map', {
  'center': [{{.Center}}],
  'zoom': 20,
  'layers': [tileLayer]
});

{{ range .Data }}
marker{{.Hash}} = L.marker([{{.Latitude}}, {{.Longitude}}],{
  draggable: true
}).addTo(map).bindTooltip("{{.Location}}",
    {
        permanent: true,
        direction: 'top'
    });
marker{{.Hash}}.on('dragend', function (e) {
  console.log(marker{{.Hash}}.getLatLng().lat,marker{{.Hash}}.getLatLng().lng);
  $.ajax({
        type: "POST",
        //the url where you want to sent the userName and password to
        url: '/api/v1/gps',
        dataType: 'json',
        async: false,
        //json object to sent to the authentication url
        data: JSON.stringify({'f':'{{$.Family}}','l':'{{.Location}}','gps':{'lat':marker{{.Hash}}.getLatLng().lat,'lon':marker{{.Hash}}.getLatLng().lng} }),
        success: function (msg) {
            toastr["success"](msg['message']);
        }
    });
});

$.getJSON("static/laminar9.json", function(geoJSON) {

            var indoorLayer = new L.Indoor(geoJSON, {
                getLevel: function(feature) {
                    if (feature.properties.relations.length === 0)
                        return null;

                    return feature.properties.relations[0].reltags.level;
                },
                onEachFeature: function(feature, layer) {
                    layer.bindPopup(JSON.stringify(feature.properties, null, 4));
                },
                style: function(feature) {
                    var fill = 'white';

                    if (feature.properties.tags.buildingpart === 'corridor') {
                        fill = '#169EC6';
                    } else if (feature.properties.tags.buildingpart === 'verticalpassage') {
                        fill = '#0A485B';
                    }

                    return {
                        fillColor: fill,
                        weight: 1,
                        color: '#666',
                        fillOpacity: 1
                    };
                }
            });

            indoorLayer.setLevel("1");

            indoorLayer.addTo(map);

        });
var levelControl = new L.Control.Level({
                level: "0",
                levels: indoorLayer.getLevels()
            });

            // Connect the level control to the indoor layer
            levelControl.addEventListener("levelchange", indoorLayer.setLevel, indoorLayer);

            levelControl.addTo(map);


        var legend = L.control({position: 'topright'});

        legend.onAdd = function(map) {
            var d = "This Leaflet plugin makes it easier to create indoor " +
                    "maps. This example pulls in the data for a particular " +
                    "building, and then displays it on the map, you can " +
                    "change the level displayed by using the selector at " +
                    "the bottom right of the map."

            var div = L.DomUtil.create('div', 'info legend');

            div.appendChild(document.createTextNode(d));

            return div;
        };

        legend.addTo(map);

{{end}}
